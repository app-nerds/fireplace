/* v1.5.3 */
const fetch=window.fetch.bind(window),objectToMap=(t={})=>{let e=new Map;for(const o in t)e.set(o,t[o]);return e};class BaseView extends HTMLElement{constructor(t){super(),this._title="",this.params=t,this._state={},this.router=window._router}async connectedCallback(){await this.beforeRender(),await this.render(),this._setDocumentTitle(),await this.afterRender()}disconnectedCallback(){this.onUnload()}_setDocumentTitle(){var t=this.querySelectorAll("title");t&&0<t.length&&(this._title=t[0].innerText,document.title=this._title,this.removeChild(t[0]))}async beforeRender(){}async afterRender(){}async onUnload(){}async render(){throw new Error("not implemented")}get title(){return this._title}get html(){return this._html}get state(){return this._state}set state(t){this._state=t}getQueryParam(t){return this.router.getQueryParam(t)}navigateTo(t,e={},o={}){this.router.navigateTo(t,e,o)}}class DefaultPageNotFound extends BaseView{constructor(t){super(t)}async render(){return`
			<title>Page Not Found</title>
			<p>The page ${this.params.path} could not be found.</p>
		`}}customElements.define("default-page-not-found",DefaultPageNotFound);class Router{constructor(t,e,o=null){this.targetEl=t,this.routes=e,this.pageNotFoundView=o,this.beforeRoute=null,this.afterRoute=null,this.injectParams=null,this.pageNotFoundView?this.routes.push({path:"/404notfound/:path",view:this.pageNotFoundView}):this.routes.push({path:"/404notfound/:path",view:DefaultPageNotFound})}_pathToRegex(t){return new RegExp("^"+t.replace(/\//g,"\\/").replace(/:\w+/g,"(.+)")+"$")}_getParams(t){let e=0;var o=t.result.slice(1),r=Array.from(t.route.path.matchAll(/:(\w+)/g)).map(t=>t[1]);let a={};for(e=0;e<o.length;e++)a[r[e]]=o[e];if(this.injectParams){var n=this.injectParams(t);for(const i in n)a[i]=n[i]}return a}async _route(t){let e={};t.state&&(e=t.state);const o=this.routes.map(t=>({route:t,result:location.pathname.match(this._pathToRegex(t.path))}));let r=o.find(t=>null!==t.result);if(r){if(!this.beforeRoute||!1!==this.beforeRoute.apply(this,r.route)){t=this._getParams(r);const a=new r.route.view(t),n=(a.state=e,document.querySelector(this.targetEl));n.innerHTML="",n.appendChild(a),this.afterRoute&&this.afterRoute(r.route)}}else this.navigateTo("/404notfound"+location.pathname)}getQueryParam(t){let e=new URLSearchParams(location.search);return e.get(t)}navigateTo(t,e={},o={}){let r="";if(0<Object.keys(e).length){var a,n,e=objectToMap(e);r+="?";for([a,n]of e){var i=encodeURIComponent(a);let t=n;"object"==typeof n&&(t=JSON.stringify(n));var s=encodeURIComponent(t);r+=i+`=${s}&`}}history.pushState(o,null,""+t+r),this._route({state:o})}}const application=(t,e,o=DefaultPageNotFound)=>(window._router=new Router(t,e,o),window.navigateTo=window._router.navigateTo.bind(window._router),window.addEventListener("popstate",t=>{window._router._route({state:t.state})}),{routes:e,targetElement:t,router:window._router,afterRoute:t=>{window._router.afterRoute=t.bind(window._router)},beforeRoute:t=>{window._router.beforeRoute=t.bind(window._router)},injectParams:t=>{window._router.injectParams=t.bind(window._router)},go:()=>{window._router._route({})}});export{BaseView,DefaultPageNotFound,Router,application,fetch};